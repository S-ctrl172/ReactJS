{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetail","match","useRouteMatch","params","console","log","path","url","getSingleQuote","loadedQuote","exact","to"],"mappings":"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","file":"static/js/3.3cc2b3c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1KPLF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1qOsO\",\"loading\":\"NewCommentForm_loading__2yU0p\",\"control\":\"NewCommentForm_control__2KX-f\",\"actions\":\"NewCommentForm_actions__2DKo5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__25zvM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__a2phD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3UXtC\"};","import { useRef, useEffect } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport useHttp from '../../hooks/use-http';\nimport {addComment} from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\n\nconst NewCommentForm = (props) => {\n\n\n  const commentTextRef = useRef();\n  \n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n\n  useEffect( () => {\n    if(status === 'completed' && !error){\n      onAddedComment();\n    }\n  }, [ status, error, onAddedComment ] );\n\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n    const enteredText = commentTextRef.current.value;\n\n    // send comment to server\n    sendRequest( \n      {commentData: {text:enteredText}, quoteId: props.quoteId } );\n  };\n\n\n\n  return (\n\n    <form className={classes.form} onSubmit={submitFormHandler}>\n\n\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner/>\n        </div>\n      )}\n\n\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n\n\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n\n\n    </form>\n\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect,useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\n\nimport NewCommentForm from './NewCommentForm';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from '../comments/CommentsList';\n\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\n\n\n\nconst Comments = () => {\n\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const {sendRequest, status, data:loadedComments } = useHttp(getAllComments);\n\n\n  useEffect(() =>{\n    sendRequest(quoteId);\n  }, [ sendRequest, quoteId ] );\n\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  \n  const addedCommentHandler = useCallback( () =>{\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId] );\n  \n  \n  let comments;\n  \n\n  if(status === 'pending'){\n    comments = <div className='centered'> <LoadingSpinner/> </div>\n  }\n\n\n  if(status === 'completed' && \n  loadedComments &&  loadedComments.length > 0){\n    comments = <CommentsList comments={loadedComments}/>;\n  }\n  \n\n  if(status === 'completed' && \n  (!loadedComments || loadedComments.length === 0) ){\n    comments = <p className='centered'>No Comments were added yet!</p>;\n  }\n\n\n\n  return (\n    <section className={classes.comments}>\n\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n\n      {isAddingComment && \n        <NewCommentForm \n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      }\n      \n      {comments}\n\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useParams, Route, Link, useRouteMatch} from \"react-router-dom\";\r\n\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\n\r\n\r\nconst QuoteDetail = () => {\r\n\r\n    const match =  useRouteMatch();\r\n    const params = useParams();\r\n\r\n    console.log(params.quoteId);\r\n    console.log(match.path);\r\n    console.log(match.url);\r\n\r\n    const { quoteId } = params;\r\n\r\n    const {sendRequest, status, data: loadedQuote, error } = useHttp(\r\n        getSingleQuote, true\r\n    );\r\n\r\n\r\n    useEffect( () => {\r\n        sendRequest(quoteId);\r\n    } , [ sendRequest,quoteId ] );\r\n\r\n\r\n    if(status === 'pending'){\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    if(error){\r\n        return <p className='centered'>{error}</p>\r\n    }\r\n    \r\n    \r\n\r\n    if(!loadedQuote.text){\r\n        return <p>No Quote Found!</p>;\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <div>\r\n\r\n            <HighlightedQuote \r\n                text={loadedQuote.text} \r\n                author={loadedQuote.author}\r\n            />\r\n\r\n                        {/* /quotes/:quoteId */}\r\n            <Route path={`${match.path}`} exact> \r\n                <div className='centered'>\r\n                             {/* /quotes/q2 */}\r\n                    <Link to={`${match.url}/comments`}\r\n                        className='btn--flat'\r\n                    >\r\n                        Load Comments\r\n                    </Link>\r\n                </div>\r\n            </Route>\r\n            \r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments/>\r\n            </Route>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}