{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntered","authorInputRef","useRef","textInputRef","Fragment","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,kGCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCgF/BC,EA3EG,SAACL,GAEjB,MAAqCM,oBAAS,GAA9C,mBAAQC,EAAR,KAAoBC,EAApB,KAGMC,EAAiBC,mBACjBC,EAAeD,mBAwBrB,OAEE,eAAC,IAAME,SAAP,WAEE,cAAC,IAAD,CAAQC,KAAMN,EAAYO,QAAU,SAACC,GAAD,MAAc,kCAGlD,cAAC,EAAD,UAEE,uBACEC,QApBkB,WACxBR,GAAa,IAoBPP,UAAWC,IAAQe,KACnBC,SAlCR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBZ,EAAea,QAAQC,MACvCC,EAAcb,EAAaW,QAAQC,MAIzCvB,EAAMyB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAuB5C,UAOGxB,EAAM4B,WACL,qBAAK3B,UAAWC,IAAQ2B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK7B,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK1B,OAGtC,sBAAKR,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKxB,OAGpC,qBAAKV,UAAWC,IAAQmC,QAAxB,SACE,wBAAQC,QAvCM,WACtB9B,GAAa,IAsC6BP,UAAU,MAA5C,kC,gBC9BGsC,UAjCE,WAGb,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAEfC,EAAUC,cAGhBC,qBAAW,WAEO,cAAXH,GACCC,EAAQG,KAAK,aAGlB,CAAEJ,EAAQC,IASb,OAEI,aADA,CACC,EAAD,CACIhB,UAAwB,YAAXe,EACblB,WAVgB,SAACuB,GACrBN,EAAYM","file":"static/js/4.c5b07c12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1dtaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2uAKQ\",\"loading\":\"QuoteForm_loading__35KXO\",\"control\":\"QuoteForm_control__l2U8S\",\"actions\":\"QuoteForm_actions__2CPde\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useRef, useState } from 'react';\nimport { Prompt } from 'react-router';\n\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n\n  const [ isEntering, setIsEntered ] = useState(false);\n\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n\n  const formFoucusHandler = () =>{\n    setIsEntered(true);\n  };\n\n  const finishedHandler = () =>{\n    setIsEntered(false);\n  };\n\n\n\n  return (\n\n    <React.Fragment>\n\n      <Prompt when={isEntering} message={ (location) => 'Are You Sure? Data will Lost'}\n      />\n\n      <Card>\n\n        <form \n          onFocus={formFoucusHandler} \n          className={classes.form} \n          onSubmit={submitFormHandler}\n        >\n\n\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n\n          <div className={classes.actions}>\n            <button onClick={finishedHandler} className='btn'>Add Quote</button>\n          </div>\n\n\n        </form>\n\n      </Card>\n    </React.Fragment>\n\n  );\n};\n\nexport default QuoteForm;\n","\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useHistory } from 'react-router';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst NewQuote = () => {\r\n\r\n\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect( () => {\r\n\r\n        if(status === 'completed'){\r\n            history.push('/quotes');\r\n        }\r\n\r\n    }, [ status, history ] );\r\n\r\n\r\n    const addQuoteHandler = (quoteData) =>{\r\n        sendRequest(quoteData);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        // onAddQuote exects function with some data\r\n        <QuoteForm \r\n            isLoading = {status === 'pending'}\r\n            onAddQuote={addQuoteHandler}\r\n        />\r\n    );\r\n\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}